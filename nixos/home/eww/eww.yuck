;; Battery Widget ;;
(defpoll battery            :interval "1s"  "~/.config/eww/scripts/battery.sh icon")
(defpoll battery-cappacity	:interval "1s"	"~/.config/eww/scripts/battery.sh percent")
(defwidget bat []
  (box
    :orientation "v"
    :space-evenly false
    (label
      :class "bat"
      :halign "center"
      :text battery
      :tooltip "Battery: ${battery-cappacity}%"
    )
  )
)

;; Control Panel Widget ;;
(defwidget control []
  (box
    :orientation "v"
    :space-evenly false
    :class "control"
    (bat)
  )
)

;; Clock Widget ;;
(defpoll hour :interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")
(defwidget time []
  (box
    :orientation "v"
    :class "time"
    :valign "end"
    (box
      :class "time-hour"
      hour
    )
    (box
      :class "time-min"
      min
    )
  )
)

;; Powermenu Widget ;;
(defvar power false)
(defwidget power []
  (eventbox
    :onhover "eww update power=true"
    :onhoverlost "eww update power=false"
    (box
      :orientation "v"
      :space-evenly false
      :vexpand false
      :class "powermenu"
      (revealer
        :transition "slideup"
        :reveal power
        :duration "550ms"
        (box
          :orientation "v"
          :space-evenly "false"
          (button
            :class "button-reboot"
            :onclick ""	""
          )
          (button
            :class "button-quit"
            :onclick "" "󰍃"
          )
          (button
            :class "button-lock"
            :onclick ""	""
          )
        )
      )
      (button
        :class "button-off"
        :onclick ""	""
      )
    )
  )
)
;; Top Widgets ;;
(defwidget top []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "start"
    "l"
    "w"
  )
)

;; Bottom Widgets ;;
(defwidget bottom []
  (box
    :orientation "v"
    :space-evenly false
    (time)
    (power)
  )
)

;; End Widgets ;;
(defwidget end []
  (box
    :orientation "v"
    :space-evenly "false"
    :valign "end"
    :spacing 5
    (control)
    (bottom)
  )
)

;; Bar Widget ;;
(defwidget bar []
  (box
    :class "eww_bar"
    :orientation "v"
    :vexpand false
    :hexpand false
    (top)
    (end)
  )
)

;;;;;;;;;;;;;;;;;;;;;;
;; Window Section's ;;
;;;;;;;;;;;;;;;;;;;;;;

;; Bar Window ;;
(defwindow bar
  :monitor 0
  :stacking "fg"
  :exclusive true
  :geometry (geometry
    :x "0"
    :y "0"
    :width "48px"
    :height "1125px" ; 100% doesn't work so it depends on screen height
    :anchor "left center"
  )
  (bar)
)